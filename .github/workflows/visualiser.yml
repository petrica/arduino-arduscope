name: Build Visualiser

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          path: main
        
      - uses: actions/checkout@v2
        with:
          path: client
          ref: client

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '15.x'

      - name: Build visualiser
        working-directory: ./main/visualiser
        run: |
          npm ci
          npm run build

      - name: Copy distributables
        run: |
          cp ./main/visualiser/dist/* ./client/
      
      - name: Commit client
        working-directory: ./client
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Latest client"
            git push
          fi
  relese:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: |
          zip --junk-paths arduscope arduscope/*
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./arduscope.zip
          asset_name: arduscope.zip
          asset_content_type: application/zip
      
